name: Build

permissions:
  contents: write

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Adding dependencies
      run: sudo apt install gcc-mingw-w64

    - name: Add target x86_64-unknown-linux-musl
      run: rustup target add x86_64-unknown-linux-musl
    - name: Add target x86_64-pc-windows-gnu
      run: rustup target add x86_64-pc-windows-gnu
    - name: Add target x86_64-apple-darwin
      run: rustup target add x86_64-apple-darwin
    - name: Add target aarch64-apple-darwin
      run: rustup target add aarch64-apple-darwin

    - name: Run tests
      run: cargo test --verbose

    - name: Build Linux
      run: cargo build --target x86_64-unknown-linux-musl --release --verbose

    - name: Build Windows
      run: cargo build --target x86_64-pc-windows-gnu --release --verbose

    - name: Get version
      run: echo "version=$(./target/x86_64-unknown-linux-musl/release/aemt --version | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
      id: version

    - name: Get short SHA
      id: short_sha
      run: echo "short_sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

    - name: Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: v${{ steps.version.outputs.version }}-${{ steps.short_sha.outputs.short_sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/x86_64-unknown-linux-musl/release/aemt
        asset_name: aemt_${{ steps.version.outputs.version }}_linux_amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/x86_64-pc-windows-gnu/release/aemt.exe
        asset_name: aemt_${{ steps.version.outputs.version }}_windows_amd64.exe
        asset_content_type: application/octet-stream
